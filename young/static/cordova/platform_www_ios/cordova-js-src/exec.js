var cordova=require("cordova"),utils=require("cordova/utils"),base64=require("cordova/base64");function massageArgsJsToNative(e){if(!e||"Array"!==utils.typeName(e))return e;var a=[];return e.forEach((function(e,r){"ArrayBuffer"===utils.typeName(e)?a.push({CDVType:"ArrayBuffer",data:base64.fromArrayBuffer(e)}):a.push(e)})),a}function massageMessageNativeToJs(e){if("ArrayBuffer"===e.CDVType){var a=function(e){for(var a=new Uint8Array(e.length),r=0;r<e.length;r++)a[r]=e.charCodeAt(r);return a.buffer},r=function(e){return a(atob(e))};e=r(e.data)}return e}function convertMessageToArgsNativeToJs(e){var a=[];return e&&Object.prototype.hasOwnProperty.call(e,"CDVType")?"MultiPart"===e.CDVType?e.messages.forEach((function(e){a.push(massageMessageNativeToJs(e))})):a.push(massageMessageNativeToJs(e)):a.push(e),a}var iOSExec=function(){var e,a,r,o,t,n=null;if("string"===typeof arguments[0])throw new Error("The old format of this exec call has been removed (deprecated since 2.1). Change to: cordova.exec(null, null, 'Service', 'action', [ arg1, arg2 ]);");e=arguments[0],a=arguments[1],r=arguments[2],o=arguments[3],t=arguments[4],n="INVALID",t=t||[],(e||a)&&(n=r+cordova.callbackId++,cordova.callbacks[n]={success:e,fail:a}),t=massageArgsJsToNative(t);var c=[n,r,o,JSON.parse(JSON.stringify(t))];window.webkit.messageHandlers.cordova.postMessage(c)};function cordovaExec(){var e=require("cordova/exec"),a="function"===typeof e.nativeFetchMessages&&"function"===typeof e.nativeEvalAndFetch&&"function"===typeof e.nativeCallback;return a&&execProxy!==e?e:iOSExec}function execProxy(){cordovaExec().apply(null,arguments)}iOSExec.nativeCallback=function(e,a,r,o,t){var n=0===a||1===a,c=convertMessageToArgsNativeToJs(r);Promise.resolve().then((function(){cordova.callbackFromNative(e,n,a,c,o)}))},iOSExec.nativeEvalAndFetch=function(e){try{e()}catch(a){console.log(a)}},execProxy.nativeFetchMessages=function(){return cordovaExec().nativeFetchMessages.apply(null,arguments)},execProxy.nativeEvalAndFetch=function(){return cordovaExec().nativeEvalAndFetch.apply(null,arguments)},execProxy.nativeCallback=function(){return cordovaExec().nativeCallback.apply(null,arguments)},module.exports=execProxy;